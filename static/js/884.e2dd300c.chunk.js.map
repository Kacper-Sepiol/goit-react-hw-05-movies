{"version":3,"file":"static/js/884.e2dd300c.chunk.js","mappings":"6LAIMA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAgB,IAClCC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAmB,IA4C9C,UA1CqB,WACnB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAYpC,OAVAI,EAAAA,EAAAA,YAAU,WAIRC,MAAM,sCAADC,OAAuCV,EAAO,aAAAU,OAHpC,qCAIZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAIP,EAAgBO,EAAK,IAClCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,gCAAiCA,EAAM,GACzE,GAAG,CAAChB,KAGFkB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,UAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKb,EAAae,SAClBD,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAKb,EAAagB,YAClBF,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAKb,EAAaiB,WAClBH,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACHD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,WAAAf,OAAaV,EAAO,SAAQmB,SAAC,UACrCC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,WAAAf,OAAaV,EAAO,YAAWmB,SAAC,mBAI5CC,EAAAA,EAAAA,KAACM,EAAAA,SAAQ,CAACC,UAAUP,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAAgBA,UACtCD,EAAAA,EAAAA,MAACU,EAAAA,GAAM,CAAAT,SAAA,EACLC,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAI,IAAApB,OAAMV,EAAO,SAAS+B,SAASX,EAAAA,EAAAA,KAACvB,EAAI,OAC/CuB,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,2BAA2BC,SAASX,EAAAA,EAAAA,KAACrB,EAAO,YAI5DqB,EAAAA,EAAAA,KAACY,EAAAA,GAAM,MAGb,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, Link, Routes, Route, Outlet } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\n\nconst Cast = lazy(() => import('./Cast'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n\n  useEffect(() => {\n    const apiKey = '493ca07ced65ee69b94ce62a3e3db755';\n\n    // zapytanie o film\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`)\n      .then(response => response.json())\n      .then(data => setMovieDetails(data))\n      .catch(error => console.error('Error fetching movie details:', error));\n  }, [movieId]);\n\n  return (\n    <div>\n      <header>\n        <h1>{movieDetails.title}</h1>\n        <h3>Overview:</h3>\n        <h4>{movieDetails.overview}</h4>\n        <h3>run time:</h3>\n        <h4>{movieDetails.runtime}</h4>\n        <p>Additional information</p>\n        <nav>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          <br />\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </nav>\n      </header>\n\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Routes>\n          <Route path={`/${movieId}/cast`} element={<Cast />} />\n          <Route path=\"/movies/:movieId/reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Cast","lazy","Reviews","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","useEffect","fetch","concat","then","response","json","data","catch","error","console","_jsxs","children","_jsx","title","overview","runtime","Link","to","Suspense","fallback","Routes","Route","path","element","Outlet"],"sourceRoot":""}